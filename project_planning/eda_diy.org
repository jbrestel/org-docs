#+STARTUP: indent
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+TITLE:     EDA DIY
#+AUTHOR:    John Brestelli
#+DESCRIPTION: EDA DIY
#+OPTIONS:   H:5 num:nil toc:2 p:t tags:not-in-toc

* Overview

Because preprocessing may change for clinep (and already has for mbio) we will store both raw and preprocessed data in iRODs.  The initial validator step will make the transformed/preprocessed files.  The Installer will check if needed files are available and create if necessary.

#+name: Process Flow
#+begin_src plantuml :file images/eda_diy.png :exports results
start
if(isMbio) then (yes)
  :Validate biom;
  :preprocess biom;
 else(no)
  :Validate tab delim;
  :preprocess tab delim;
endif
if(isValid) then (yes)
  :IRODs;
  rectangle Installer {
  if(missingPreprocessedFiles) then (yes)
    if(isMbio) then (yes)
      :preprocess biom;
    else(no)
      :preprocess tab delim;
    endif
  else (no)
  endif
   :load ontologyterms;
   :load entity graph;
   :load attribution;
        }
else (no)
  :Exit and Report Errors;
endif

stop
#+end_src

#+RESULTS: Process Flow
[[file:images/eda_diy.png]]

- [X] (Wojtek) confirm that we run "touch GusSchema/Definition/config/gus_schema.xml; bld GUS" which creates the GUS model objects
  - [X] is there a gus.config in $GUS_HOME/congig?  does that have group/project ?

- [X] !can joe user run a plugin (is joe user in Core.UserInfo;  ProjectUser and GroupUser tables need rows)
  - [X] Use Reflow Workflow Step to add joe user and link to Group and Project to be run on "inc" database instance during build

- [X] Assume Dependent data like Ontology Term Types are loaded by Reflow Worfklow and available to UserDataset Installer

- [X] how to run singularity on any jenkins/server?  is singularity installed on ash?.. NO!
  - are we able to consistently pull from docker?
  - does singularity use the cache?
  - currently we're using the latest version of the RServe code.  Should change that to a tags


- [X] (JohnB) add user_dataset_id to each eda_ud table
  - [X] sql to be run after "createEntityGraph" tables in schema installer

- [X] need access to GUS_HOME on jenkins.
  - [X] $GUS_HOME/config/gus.config specifies the database

- [X] (JohnB) Create EDA_UD tables to store Attribution/Dataset info
  - this should mirror what we have in apidbtuning.datasetpresenter
  - begin with minimal info (name, description, ID)
  - [X] Requires a unique id for the study/dataset.  Can we just store the user dataset id??

- [X] (JayH) Need a workflow step (eda-inc and mbio) which will add joeuser and associate with row(s) in core.projectinfo and core.groupinfo

- [X] (JayH) make jenkins job to make container and push to dockerhub


* Validator

Write some python code?  The parent is in python.

- [X] (Wojtek) confirm fresh checkout can run and pass tests
  - [X] add some readme text describing how to run these

- [X] Confirm We will need separate validators for Mbio and ClinEpi

- [X] Where does the validator code live?  is this built in a container?

   [[https://github.com/VEuPathDB/dataset-handler-biom]]

   ValidationException :: User submitted a bad  file
   BaseException :: Some random error.  User should email us

- [X] mbio to use Use existing biom validator?
  - [X] Are there additional requirements for metadata table?... NO!

- [X] Clinepi first deliveralbe, there will be a single file (one entity type)
  - What can we validate?
    - call the parser.  if it parses it we are good.

- [X] (JohnB) Follow up with Ann/Dave
  - a) uncategorized variables are ok.


* Preprocess/Transform Script                                                                                     :JayH:


These scripts can be called in the Validator or Installer (for legacy user datasets in IRODs)

- [X] Create ontology files
  - [X] Entity Types (mbio will have 2 rows.  ClinEpi one row per file)
  - [X] Variables/Attributes

- [X] ISASimple data file
- [X] ISASimple ancilary files (use ontology term source_ids from above)
  - [X] "investigation.xml" file for the study
  - [X] ontologyMapping.xml? is this needed?

* Installer

- Example:  irods.builder on [[https://ws.apidb.org]]

- [ ] Confirm mbio can genreate ISASimple file from biom

** Example files

#+name: Household.txt
| Household ID | Parent | h_attr1    | h_attr2      | h_attr3    |
|--------------+--------+------------+--------------+------------+
| hh_id1       |        | attr1_val1 | attr2_value1 | attr3_val1 |
| hh_id2       |        | attr1_val2 | attr2_value2 | attr3_val2 |
| hh_id3       |        | attr1_val2 | attr2_value3 | attr3_val3 |

#+name: Participant.txt
| Household ID | Parent | h_attr1    | h_attr2      | h_attr3    |
|--------------+--------+------------+--------------+------------|
| p_id1        | hh_id1 | attr1_val1 | attr2_value1 | attr3_val1 |
| p_id2        | hh_id2 | attr1_val2 | attr2_value2 | attr3_val2 |
| p_id3        | hh_id3 | attr1_val2 | attr2_value3 | attr3_val3 |



** Use existing plugins / workflow

bash script with the following plugins configured.  We can test in the rm41910 eda_ud schema

- where does this bash script live in the codebase??
*** ExternalDatabase and ExternalDatabaeRelease
- [X] GUS::Supported::Plugin::InsertExternalDatabase
- [X] GUS::Supported::Plugin::InsertExternalDatabaseRls

*** Insert "Ontology" (EntityTypes, Variables and Protocols?)
- [X] GUS::Supported::Plugin::InsertOntologyFromTabDelim
  - This will load into OntologyTerm and OntologySynonym

*** Insert Entity Graph
  - [X] ApiCommonData::Load::Plugin::InsertEntityGraph
  - [X] ApiCommonData::Load::Plugin::LoadAttributesFromEntityGraph
  - [X] ApiCommonData::Load::Plugin::LoadEntityTypeAndAttributeGraphs
  - [X] ApiCommonData::Load::Plugin::LoadDatasetSpecificEntityGraph
  - [X] No need to load StudyCharacteristics

*** Insert Dataset tables :JohnB:
The EDA requires a dataset record.  Steve's proposal is to create a UserDatasetPresenter table which can be installed along with other data.
NOTE:  The User Dataset metadata is not sufficient as we need a wdk record not simply the user dataset page.

- [X] Table(s) for the Dataset
- [ ] Create View which unions apidbtuning.datasetpresener with eda_ud.datasetpresenter

* Undo for Installer!!!
- [X] create script which manages undo (given user dataset id)
- [X] confirm that undo mechanism can handle tables which do not have a user_dataset_id (SRes tables)

   #+name: Ontology Undo
   #+begin_src sql
     delete blah from sres.ontologyterm where ontology_term_id in (
	select distinct ontology_term_id from eda_ud.attribute where user_dataset_id = ?
	union
	select distinct ontology_term_id from eda_ud.entitytype where user_dataset_id = ?
	union
	...
     )
#+end_src

** how to delete a study

1. [X] find study_id and internal abbrev (input is user_dataset_id)
2. [X] find entity_type_id and internal abbrev (input is study_id)
3. [X] find external_database_release_id for study
4. [X] find external_database_id for study
5. [X] find external_database_release_id for ontology terms
6. [X] find external_database_id for ontology terms
7. [X] Delete dataset specific tables
   - ANCESTORS_${studyAbbrev}_${entityTypeAbbrev}
   - ATTRIBUTEGRAPH_${studyAbbrev}_${entityTypeAbbrev}
   - ATTRIBUTEVALUE_${studyAbbrev}_${entityTypeAbbrev}
8. [X] delete EntityTypeGraph by study_id
9. [X] delete AttributeGraph by study_id
10. [X] delete attributeunit by entity_type_id
11. [X] delete attribute by entity_type_id
12. [X] delete processattributes by linking to entityattributes
13. [X] delete entityattributes by entity_type_id
14. [X] delete attributevalue by entity_type_id
15. [X] delete EntityType by study_id
16. [X] delete study by study_id
17. [X] delete studydataset by study_id
18. [X] delete studycharacteristict by study_id
19. [X] delete sres.ontologyrelationship by external_database_release_id
20. [X] delete sres.ontologysynonym by external_database_release_id
21. [X] delete sres.externaldatabaserelease (2)
22. [X] delete sres.externaldatabase (2)


* WDK Model
- [ ] For all relevant dataset record attributes and tables... need to use the View (above) which is a union of the datasetpresenter tables and the eda_ud dataset tables
- [ ] Fix the general look of the dataset record page.  The UD version should only have the minimal info (name and description) for now


* UX
  Existing UX for Microbiome biom files should remain in place.  ClinEpi DIY will need to consume 1 or more tab files and the user should be able to specifiy the "parent" entity type for each file

* What to do about legacy user datasets?
versioning in user datasets is for what is stored in irods.  Add optional preprocessing/transform stept to installer.  This should give us flexibility (ie. if the raw data has not changed, we are free to switch around the installer steps)

* Study access
** TODO How does user dataset access differ from "study access"
