#+STARTUP: indent
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+TITLE:     Apollo
#+AUTHOR:    John Brestelli
#+DESCRIPTION: Apollo
#+OPTIONS:   H:5 num:nil toc:2 p:t tags:not-in-toc

* Tasks
** TODO check on junction strand for apollo track
** TODO Apollo Intron weak evidence Track
- [ ] Add "score" as the glyph label
- [ ] filter junctions by count of isr (score)
** TODO single exon error?  try naming the exons?

** TODO Check with Gareth if description is stored
** TODO Additional warning to check if cds has changed... are go functions the same
- This should happen when curation team sets status to "finished".... warning popup

* Initial Design   
** Transcripts added in apollo that overlap an existing gene locus will be used in place of existing transcripts.  Same goes for Functional Annotations.
 - Does the patch build expect apollo transcripts to have gene identifiers or is it using the genomic locations for existing genes?
 - Confirm this process is strand aware as we do have genes which overlap on different strands
 - Do we ever have a case where 2 genes overlap on same strand?
 - Does the patch build system have a mechanism for retaining transcript ids if the gene structure hasn't changed?

** Transcripts can be added in apollo in various ways.
 - Any evidence track can be used to make a new apollo transcript (RNASeq Junctions, Protein Alignments, Transcript, Gene...)
 - BUT Only Gene or Transcript Tracks can apply the existing transcript/gene source_ids which may be useful
 - Draggable Transcript Tracks add one transcript at at time.  Does the Gene Track allow the user to add ALL transcripts for the Gene by right clicking on the gene?
 - This seems like a bad UX as it would be very easy to create Apollo transcripts which clobber existing things.
    
** None of the functional annotations are applied to the Apollo Transcript by default.
 - Currently the currator must remember to add all go terms, products, + anything else used by patch build
 - I think it is a requirement to have the product, GO,... automatically set in the Apollo Transcript if the Apollo Transcript was created by an existing Transcript or Gene Evidence Track.
 - The features in our Evidence tracks can contain the Functional Annotation.
 - Nathan said it was hard to automatically apply to Apollo Features as they are created.  I think it's worth a second look.  At a minimum, any process which is able to add Functional Annotation to an APollo Transcript should be able to be called as a hook after the apollo feature is created.


* Build SOPs
** JBrowse Configuration

  - use fasta file for the top level genomic sequences.  Currently the script uses workflow's topLevelSequence directory
  - General refactoring of the scripts
  - Add any new Organisms
  - add additional config file for the "extra organisms"

#+BEGIN_EXAMPLE
  perl dumpConfigurationsForApollo.pl  \\
       --output_dir /eupath/data/apolloConfigs/release-${buildNumber}/prod/${projectName}/ \\
       --website https://${lc_projectName}.org  \\
       --subdomain qa \\
       --strip_subdomain \\
       --database ${projectName}
#+END_EXAMPLE

** Organism Version Changes
*** Handle new organisms (groovy script)
#+BEGIN_SRC
perl makeGroovyAddOrganismCommands.pl > commands.txt
#+END_SRC
**** Retrieve all organisms within apollo
#+BEGIN_EXAMPLE
curl -X POST -F 'username=api@local.host' -F 'password=${password}' -L https://apollo-api.veupathdb.org/organism/findAllOrganisms
#+END_EXAMPLE
**** Delete an organism within apollo
#+BEGIN_EXAMPLE
curl -X POST -H "Content-Type: application/json" --data '{"username":"api@local.host","password":"${password}","id":"${organismId}"}' https://apollo-api.veupathdb.org/organism/deleteOrganism
#+END_EXAMPLE
**** Update Organism
#+BEGIN_SRC
curl -X POST -H "Content-Type: application/json" --data '{"username":"api@local.host","password":"${password}","id":"${organismId}", "directory":"/data/apollo_data/${organismAbbrev}", "blatdb":"/data/apollo_data/twoBit/${organismAbbrev}.2bit", "publicMode":"true"}' https://apollo-api.veupathdb.org/organism/updateOrganismInfo
#+END_SRC

*** How to update organism names?
  - is there a groovy script to update organism name?  we'll need to do this manually; updateOrganismInfo?
  - if( $apolloOrganismName =~ /$organismFullName \[$version]/) {
       # do nothing
    } elsif( $apolloOrganismName =~ /$organismFullName \[.+\]/) {
      # print groovy command to Update the organism name
    } else {
      # print groovy command to add new organism
    }

- What happens if the underlying sequence changes?
  - there would need to be a manual liftover mapping or remove the organism from apollo and discard any curations for that organism
  - this will be rare if ever
- When we generate the configurations for build 49...
  - Toxo,Amoeba,Piro,and VectorBase + extras for David




* QA
- The Curation team must have a way to check any locus that has missing transcipts (either from themselves or via community users)
- The genomic sites query apollo nightly to get a list of changes.  We should be able to provide a report back to users to indicate if there are now missing transcripts in that region or missing functional annotation.  This same report may be what is needed for curator review.

* Data Dev Apollo meeting 8/6/2020

** Incorporation of edits into VEuPath genomics sites
*** How to visualize edits in real time
- Explore sending track data from apollo to VEuPathDB sites.  (analogous to what we do with evidence tracks but in the opposite direction).  This could be shown in the gene annotation section of the gene page and in the genome browser.
- Current VEuPathDB sites allow users to find all genes which have any edit.  We would need to create a service to use apollo instead of GeneDB.
- Current VEuPathDB sites show updated gene product from GeneDB.  We would need to create a service to use apollo
*** How to incorporate edits into production
- structrual edits will be incorporated using ebi patch builds.  Will all structural edits be moved over or cherry picked (approved edits)?
- We are assuming that the patch build process will remove edits from the apollo instance (possibly recreate the organism?).
- Functional edits MUST be incorporated in the same release as a patch build.
- Functional edits may be incorporated on a more frequent release schedule.
- TODO: we need a way to dump functional edits from apollo and sop for sending to data load team.
- How do we manage the process from the start of a patch build until the time the annotations have been incorporated into GUS?  Will this be an entire release cycle (2 months?) where users cannot make edits to an organism?


* GO Annotations
** Option 1:  Bring over Functional Annotations separate from Structural
- This is the least appealing option
- This is what is being requested
** Option 2:  Apply GO functions when user drags track
- Apollo Developer said this was not possible??
- If we do this now?  would we still need to do option 1 for existing features?
** Option 3:  Pre populate the entire curation track
- Start in sync with genomic site
- Performance issue with Apollo Chado Database
   
