#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+TITLE:     Project Pages / Study Record
#+AUTHOR:    John Brestelli
#+OPTIONS:   H:5 num:nil toc:2 p:t tags:not-in-toc
* Use Cases
** RNASeq
Common case where we have Study->Assay->Data->Analysis

#+begin_src plantuml :file images/rnaseq_uml.png :exports both
object Study {
        name = "Happy Birthday Study"
        pubmed_id = 12345
        contact = "Joe"
        sampleDetailsFile = "metadata.txt"
}
rectangle GenomicsDB {
        object RawData {
                ID = "$studyName_$assayName"
                assayName = "RNASeq" 'Could also call Category??'
                assayID = "RNASeqXXXX"
                rawDataArchove = "rnaseq.fastq in SRA"
        }
        object ProcessedData {
                injector = "RNASeq.java"
                processedDataFile1 = "rnaseq.tpm"
                processedDataFile2 = "rnaseq.bw"
                searches = "where is this data used on VEuPathDB Site?"
                dowloads = "/downloads/$study"
                analysisDescription = "This is how we processed the raw data"
        }
}
Study --|> RawData
RawData --|> ProcessedData
#+end_src

#+RESULTS:
[[file:images/rnaseq_uml.png]]

** Multiple Assays per Study

One publication typically has muliple types of assays.  

#+begin_src plantuml :file images/multiple_assays_uml.png :exports both
  object Study {
          name = "Happy Birthday Study"
          pubmed_id = 12345
          contact = "Joe"
          sampleDetailsFile = "metadata.txt"
}
  rectangle GenomicsDB {

        object RNASeqRawData {
                ID = "$studyName_$assayName"
                assayName = "RNASeq" 'Could also call Category??'
                assayID = "RNASeqXXXX"
                rawDataArchove = "rnaseq.fastq in SRA"
        }
        object RNASeqProcessedData {
                injector = "RNASeq.java"
                processedDataFile1 = "rnaseq.tpm"
                processedDataFile2 = "rnaseq.bw"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }


        object ProteomicsRawData {
                ID = "$studyName_$assayName"
                assayType = "Proteomics Mass Spec"
                assayName = "MSPeptidesXXXX"
                rawDataArchove = "rnaseq.fastq in SRA"
        }

        object ProteomicsProcessedData {
                injector = "MassSpec.java"
                processedDataFile1 = "peptides"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }
  }
  Study --|> RNASeqRawData
RNASeqRawData --|> RNASeqProcessedData
  Study --|> ProteomicsRawData
ProteomicsRawData --|> ProteomicsProcessedData
  #+end_src

  #+RESULTS:
  [[file:images/multiple_assays_uml.png]]

** Host Pathogen

For the Same raw data, we align to multiple organisms for host pathogen 

#+begin_src plantuml :file images/host_pathogen_assays_uml.png :exports both
object Study {
        name = "Happy Birthday Study"
        pubmed_id = 12345
        contact = "Joe"
        sampleDetailsFile = "metadata.txt"
}
rectangle GenomicsDB {
        object RawData {
                ID = "$studyName_$assayName"
                assayName = "RNASeq" 'Could also call Category??'
                assayID = "RNASeqXXXX"
                rawDataArchove = "rnaseq.fastq in SRA"
        }
        object PathogenProcessedData {
                injector = "RNASeq.java"
                processedDataFile1 = "rnaseq.tpm"
                processedDataFile2 = "rnaseq.bw"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                referenceGenome = "pathogenGenome"
                dowloads = "/downloads/$study"
        }

        object HostProcessedData {
                injector = "RNASeq.java"
                processedDataFile1 = "rnaseq.tpm"
                processedDataFile2 = "rnaseq.bw"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                referenceGenome = "hostGenome"
                dowloads = "/downloads/$study"
        }

    }

  Study --|> RawData
RawData --|> PathogenProcessedData
RawData --|> HostProcessedData
  #+end_src

  #+RESULTS:
  [[file:images/host_pathogen_assays_uml.png]]
** ClinEpi Study

ClinEpi Studies have "Tests" but are not represented as assays.  Workflows consume sampleDetails/metadata

#+begin_src plantuml :file images/clinepi_study_uml.png :exports both
object Study {
        name = "Happy Birthday Study"
        pubmed_id = 12345
        contact = "Joe"
        sampleDetailsFile = "metadata.txt"
}
rectangle ClinEpiDB {
        object RawData {
                ID = "$studyName_$assayName"
''                assayName = "RNASeq" 'Could also call Category??'
''                assayID = "RNASeqXXXX"
                rawData = "codebook.pdf"
        }
        object ProcessedData {
''                injector = "ClinEpi.java"
                processedDataFile = "merged"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }
}
Study --|> RawData
RawData --|> ProcessedData

  #+end_src

  #+RESULTS:
  [[file:images/clinepi_study_uml.png]]
** ClinEpi Investigation

Multiple Studies can be associatated 

#+begin_src plantuml :file images/clinepi_investigation_uml.png :exports both
  object Investigation {
          name = "Happy Birthday Investigation"
          pubmed_id = 12345
              contact = "Tim"
  }


object Study1 {
        name = "Joe's Happy Birthday Study"
        pubmed_id = 12345
        contact = "Joe"
        sampleDetailsFile = "metadata.txt"
}
object Study2 {
        name = "Janes's Happy Birthday Study"
        pubmed_id = 12345
        contact = "Joe"
        sampleDetailsFile = "metadata.txt"
}


    rectangle ClinEpiDB {
        object RawData1 {
                ID = "$studyName_$assayName"
''                assayName = "RNASeq" 'Could also call Category??'
''                assayID = "RNASeqXXXX"
                rawData = "codebook.pdf"
        }
        object ProcessedData1 {
''                injector = "ClinEpi.java"
                processedDataFile = "merged"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }



        object RawData2 {
                ID = "$studyName_$assayName"
''                assayName = "RNASeq" 'Could also call Category??'
''                assayID = "RNASeqXXXX"
                rawData = "codebook.pdf"
        }
        object ProcessedData2 {
''                injector = "ClinEpi.java"
                processedDataFile = "merged"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }

}

  Investigation --|> Study1
  Investigation --|> Study2
Study1 --|> RawData1
Study2 --|> RawData2
RawData1 --|> ProcessedData1
RawData2 --|> ProcessedData2
  #+end_src

  #+RESULTS:
  [[file:images/clinepi_investigation_uml.png]]


** ClinEpi / Plasmo Cross Component

Antibody Microarray Data in PlasmoDB and ClinEpi "MetaData" comes from PRISM Study

#+begin_src plantuml :file images/clinepi_plasmo_study_uml.png :exports both
  object Study {
          name = "PRISM"
          pubmed_id = 12345
          contact = "Joe"
          sampleDetailsFile = "metadata.txt"
}

    rectangle ClinEpiDB {
        object RawData1 {
                ID = "$studyName_$assayName"
''                assayName = "RNASeq" 'Could also call Category??'
''                assayID = "RNASeqXXXX"
                rawData = "codebook.pdf"
        }
        object ProcessedData1 {
''                injector = "ClinEpi.java"
                processedDataFile = "merged"
                searches = "where is this data used on VEuPathDB Site?"
                analysisDescription = "This is how we processed the raw data"
                dowloads = "/downloads/$study"
        }
}


rectangle PlasmoDB {

          object RawDataAb {
                  name = "Microarray Raw Data"

                  file = "intensities.txt"
          }
          object ProcessedDataAb {
                  name = "Microarray Processed Data"
                  file = "normalized.txt"
          }

  }

  Study --|> RawData1
  Study --|> RawDataAb
  RawData1 --|> ProcessedData1
  RawDataAb --|> ProcessedDataAb

  #+end_src

  #+RESULTS:
  [[file:images/clinepi_plasmo_study_uml.png]]
** Compound Mass Spec

Compound Mass Spec can be treated similar to above

#+begin_src plantuml :file images/ms_compound_uml.png :exports both
  object Study {
          name = "Happy Birthday Study"
          pubmed_id = 12345
	      contact = "Joe"
  }
  object MSAssay {
          name = "MassSpec"
  }

  object MSRawData {
          name = "MS Raw Data"
          file = "peaks"
  }
  object MSProcessedData {
          name = "MS Processed Data"
          file2 = "abundance.txt"
  }

  Study --|> MSAssay
  MSAssay --|> MSRawData
  MSRawData --|> MSProcessedData
  #+end_src

  #+RESULTS:
  [[file:images/ms_compound_uml.png]]

** Global

Compound,Pathway,Ontologies only have raw data which is loaded.  Often no publication

#+begin_src plantuml :file images/global_uml.png :exports both
  object Study {
          name = "Happy Birthday Study"
	      contact = "Joe"
  }

  object GlobalRawData {
          name = "Global Raw Data"
          file = "owl"
  }

  Study --|> GlobalRawData
  #+end_src

  #+RESULTS:
  [[file:images/global_uml.png]]

* Proposed Study files
** Study
#+begin_src xml
   <study name="PRISM"
         id="STUDY_XXXX"
         projectName="PlasmoDB,ClinEpiDB"
         investigationId="someOtherStudyId"">
    <displayName><![CDATA[Study Display Name]]></displayName>
    <shortDisplayName><![CDATA[Study Short Display Name]]></shortDisplayName>
    <shortAttribution><![CDATA[Study Short Attriution]]></shortAttribution>
    <summary><![CDATA[Study Summary]]></summary>
    <description><![CDATA[ Study Description    ]]></description>
    <protocol></protocol>
    <caveat></caveat>
    <acknowledgement></acknowledgement>
    <releasePolicy></releasePolicy>
    <primaryContactId>primary.contact</primaryContactId>
    <contactId>other.contact</contactId>
    <link>
	    <text>LinkDisplay</text>
 	    <url>https://somewhere.on.the.web</url>
    </link>
    <pubmedId>12345</pubmedId>
</study>
#+end_src

** RawData
#+begin_src xml
<rawData studyId="STUDYXXXX"
         id="STUDY_XXXX_ASSAYYYYY"
         name="AssayYYYY"
         includeProjects="PlasmoDB">
    <rawDataLink>
	    <text>LinkDisplay</text>
 	    <url>https://somewhere.on.the.web</url>
    </rawDataLink>
<rawData>
<rawData studyId="STUDYXXXX"
         id="STUDY_XXXX_CategoryZZZZ"
         name="CategoryZZZZ"
         includeProjects="ClinEpi">
    <rawDataLink>
	    <text>LinkDisplay</text>
 	    <url>https://somewhere.on.the.web</url>
    </rawDataLink>
<rawData>
#+end_src

** ProcessedData

#+begin_src xml
  <processedData rawData="STUDYXXXX_ASSAYYYYY"
                 name="orgAbbrev_expt_RSRC"
                 projectName="PlasmoDB">
    <history buildNumber="51"/>
    <processedDataLink>
	    <text>NCBI BioProject</text>
	    <url>https://www.ncbi.nlm.nih.gov/bioproject/PRJEB21707</url>
    </processedDataLink>
    <templateInjector className="org.apidb.apicommon.model.datasetInjector.SomeInjector">
    </templateInjector>
  </processedData>
  <processedData rawData="STUDYXXXX_ASSAYYYYY"
                 name="orgAbbrev_expt_RSRC"
                 projectName="ClinEpiDB">
    <history buildNumber="5"/>
    <processedDataLink>
	    <text>Downloads</text>
	    <url>/downloads</url>
    </processedDataLink>
    <templateInjector className="org.apidb.apicommon.model.datasetInjector.ClinEpiInjector">
    </templateInjector>
  </processedData>
#+end_src


* Proposed WDK Records

#+begin_src plantuml :file images/pp_wdk_study.png
  !define wdkRecord(x) class x << (R,#FFAAAA) >> #line:blue;
wdkRecord(Study) {
  .. Attributes ..
  + studyId
  + description
  + primaryPublication
  + primaryContact
  + releaseDate
  + summary
  + description
  + studyAccessibility
  .. Tables ..
  + links
  + characteristics
  + otherPublications
  + versions
  + otherContacts
  + accessStats
  + accessRecords
  + otherStudiesForInvestigation
  + withinComponentDatasets
  + otherComponentDatasets
}

wdkRecord(Dataset) {
  .. Attributes ..
  + datasetId
  + studyId
  + analysisDescription
  + category
  .. Tables ..
  + rawDataLinks
  + processedDataLinks
  + searches
  + history
}

#+end_src

#+RESULTS:
[[file:images/pp_wdk_study.png]]
